@model FMB_CIS.Models.ViewModel
<div class="modal fade" id="uploadPOPModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <form asp-controller="Application" asp-action="UploadProofOfPayment" id="UploadPaymentForm" method="post" enctype="multipart/form-data">
                    <div class="d-flex flex-column align-items-center gap-4 p-5">
                        <p class="fw-bold fs-5" id="addPayment">
                            Attach Proof of Payment
                        </p>                        
                        @* <div class="row w-100">
                            <div class="col-md-12">
                                <div class="form-group mb-3">
                                    <label class="form-label small">Attach Files</label>
                                    <input type="file" class="form-control" multiple />
                                </div>
                            </div>
                        </div> *@
                        <div class="row w-100">
                            <div class="col md-6">
                                <div class="form-floating mb-3">
                                    <input type="text" class="form-control rounded-3" asp-for="tbl_Application_Payment.OR_Number" id="OR_Number" placeholder="" required/>
                                    <label for="OR_Number">OR Number</label>
                                </div>
                            </div>
                            <div class="col md-6">
                                <div class="form-floating mb-3">
                                    <input type="text" class="form-control rounded-3" asp-for="tbl_Application_Payment.Amount" type="number" min="0" step="0.01" id="Amt" placeholder="" required />
                                    <label for="Amt">Amount</label>
                                </div>
                            </div>
                        </div>
                        <div class="row w-100">
                            <div class="col md-12">
                                <div class="form-floating mb-3">
                                    <input type="text" class="form-control rounded-3" asp-for="tbl_Application_Payment.Date_of_Payment" type="date" id="Date_of_Payment" placeholder="" required />
                                    <label for="Date_of_Payment">Date of Payment</label>
                                </div>
                            </div>
                        </div>
                        <div class="row w-100">
                            <div class="alert alert-warning mt-3 mb-3" role="alert">
                                When uploading multiple files, drag all files at once on the field.
                            </div>
                            <input asp-for="filesUpload.Files" type="file" class="file" multiple data-show-upload="false" data-show-caption="true" data-msg-placeholder="Select {files} for upload...">
                        </div>
                        @* <div class="row w-100">                            
                            <div class="col-md-12">
                                <label asp-for="filesUpload.Files" class="btn btn-primary custom-file-upload">
                                    <i data-feather="upload"></i> Upload Proof of Payment
                                </label>
                            </div>
                            <input type="file" asp-for="filesUpload.Files" class="form-control file" multiple hidden />
                        </div>
                        <div class="row w-100 output">
                            Cards for files
                        </div> *@
                        @Html.HiddenFor(x=>x.tbl_Application.id,new { @id = "applicationID" })
                        @Html.Hidden("actionName", @ViewContext.RouteData.Values["action"].ToString())
                        <div class="d-flex gap-4 w-100">
                            <button id="cancelBtn" type="button" class="btn btn-danger w-100 ">Cancel</button>
                            <button id="submitBtn" type="button" class="btn btn-primary w-100">Submit</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="confirmSubmitModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div class="d-flex flex-column align-items-center gap-4 p-5">
                    <div>
                        <img src="~/assets/images/submit.png" />
                    </div>
                    <p class="fw-bold fs-5">
                        Are you sure you want to submit?
                    </p>
                    <div class="d-flex gap-4 w-100">
                        <button id="backBtn" class="btn btn-danger w-100">Back</button>
                        @* <input type="submit" value="Confirm" id="confirmBtn" class="btn btn-primary w-100" /> *@
                        <button id="confirmBtn" class="btn btn-primary w-100">Confirm</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmSuccessModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div class="d-flex flex-column align-items-center gap-4 p-5">
                    <div>
                        <img src="~/assets/images/success.png" />
                    </div>
                    <p class="fw-bold fs-5">
                        Proof of Payment submitted successfully!
                    </p>
                    <div class="d-flex justify-content-center w-100">
                        <button class="btn btn-primary w-50" onclick="window.location.href = '@Url.Action("Index", "Home", new { success = true })'">Next</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="/js/jquery-3.7.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script type="text/javascript">

    $(document).ready(function () {

        // //FILE UPLOAD
        // const dt = new DataTransfer();

        // $(".file").on("change", function (e) {

        //     // Get the selected file(s)
        //     console.log($('#filesUpload.Files').val());
        //     var selectedFiles = $(this).prop("files");
        //     console.log(selectedFiles);
        //     var fafile = "";
        //     // Clear the previous output
        //     //$(".output").empty();

        //     var duplicatedFiles = [];

        //     var validFiles = [];


        //     // Display file information in the specified format
        //     for (var i = 0; i < this.files.length; i++) {

        //         var hasdup = false;

        //         for (var x = 0; x < dt.files.length; x++) {

        //             if (dt.files[x].name == selectedFiles[i].name) {
        //                 //Swal.fire({
        //                 //    title: "Duplicate File",
        //                 //    text: "You have uploaded a duplicate file " + dt.files[0].name,
        //                 //    icon: "error"
        //                 //});
        //                 duplicatedFiles.push(selectedFiles[i].name)
        //                 //  selectedFiles.splice(i, 1);
        //                 hasdup = true;
        //             }
        //         }

        //         if (!hasdup) {
        //             validFiles.push(selectedFiles[i]);
        //         }

        //     }

        //     if (duplicatedFiles.length > 0) {


        //         var errorsHtml = "";
        //         const list = document.createElement('ul');
        //         for (var x = 0; x < duplicatedFiles.length; x++) {

        //             const listItem = document.createElement('li');
        //             listItem.innerHTML = duplicatedFiles[x] + "<br/>";
        //             list.appendChild(listItem);
        //         }

        //         Swal.fire({
        //             title: "Duplicate File",
        //             text: "You have uploaded a duplicate file " + dt.files[0].name,
        //             icon: "error",
        //             html: list,
        //             confirmButtonColor: '#14984a'
        //         });
        //     }


        //     // Display file information in the specified format
        //     for (var i = 0; i < validFiles.length; i++) {
        //         //ifelse for fa-file type
        //         if (validFiles[i].type == "application/vnd.openxmlformats-officedocument.wordprocessingml.document") {
        //             fafile = "fa-file-word"
        //         }
        //         else if (validFiles[i].type == "application/pdf") {
        //             fafile = "fa-file-pdf"
        //         }
        //         else if (validFiles[i].type == "image/jpeg") {
        //             fafile = "fa-file-image"
        //         }
        //         else {
        //             fafile = "fa-file"
        //         }
        //         // Create div elements and set their classes and content
        //         var cardDiv = $("<div>").addClass("card mw-18rem ").attr('id', validFiles[i].name);
        //         var fileDiv = $("<div>").addClass("card-body");
        //         var fileIcon = $("<i>").addClass("fas " + fafile + " text-light-green fs-1 mb-3");
        //         var dropdownIcon = $("<i>").addClass("fas fa-ellipsis-v cursor-pointer fs-3 position-absolute end-0 me-3 text-secondary").attr({
        //             "data-bs-toggle": "dropdown",
        //             "aria-expanded": "false"
        //         });
        //         var dropdownMenu = $("<ul>").addClass("dropdown-menu").append(
        //             $("<li>").append($("<a>").addClass("dropdown-item").attr("href", "#").text("View")),
        //             $("<li>").append($("<a>").addClass("dropdown-item file-delete").attr("href", "#").text("Delete")),
        //             $("<li>").append($("<a>").addClass("dropdown-item").attr("href", "#").text("Download"))
        //         );
        //         var fileName = $("<h6>").addClass("card-title text-secondary").text(validFiles[i].name);
        //         var fileInfoList = $("<ul>").addClass("list-unstyled small mb-0").append(
        //             $("<li>").append($("<span>").addClass("text-muted").text("type: " + validFiles[i].type)),
        //             $("<li>").append($("<span>").addClass("text-muted").text("size: " + (validFiles[i].size / 1024).toFixed(2) + "kb")),
        //             $("<li>").append($("<span>").addClass("text-muted").text("uploaded: " + new Date().toLocaleDateString()))
        //         );

        //         // Append created elements to the fileDiv
        //         fileDiv.append(fileIcon, dropdownIcon, dropdownMenu, fileName, fileInfoList);

        //         // Append the fileDiv to the cardDiv
        //         cardDiv.append(fileDiv);

        //         // Append the cardDiv to the output div
        //         $(".output").append(cardDiv);
        //     }
        //     for (let file of validFiles) {
        //         dt.items.add(file);
        //     }

        //     selectedFiles = dt.files;
        //     console.log(selectedFiles);


        //     $('.file-delete').click(function () {
        //         let name = $(this).closest('.card').attr('id');
        //         // Supprimer l'affichage du nom de fichier
        //         //$(this).parent().remove();
        //         document.getElementById(name).remove()
        //         for (let i = 0; i < dt.items.length; i++) {
        //             // Correspondance du fichier et du nom
        //             if (name === dt.items[i].getAsFile().name) {
        //                 // Suppression du fichier dans l'objet DataTransfer
        //                 dt.items.remove(i);
        //                 continue;
        //             }
        //         }
        //         // Mise à jour des fichiers de l'input file après suppression
        //         selectedFiles = dt.files;
        //     });

        //     this.value = null;
        // });

        // //END FOR FILE UPLOAD


        var paymentForm = document.getElementById('UploadPaymentForm');
        var formFiles = document.forms['UploadPaymentForm']['filesUpload.Files'];
        $("#cancelBtn").click(function () {            
            //Remove file data if cancel button is clicked            
            // for (let i = (formFiles.items.length - 1); i >= 0; i--) {
            //     // console.log("dt.items[i].getAsFile().name",dt.items[i].getAsFile().name);
            //     // console.log("i", i);
            //     //document.getElementById(formFiles.items[i].getAsFile().name).remove()
            //     formFiles.items.remove(i);
            //     //continue;
            // }
            // formFiles.items.clearData();
            //formFiles.value = null;
            const removeFileButton = document.querySelector('.fileinput-remove-button');
            $("input").val("");
            removeFileButton.click();
            $("#uploadPOPModal").modal("hide");
        });

        $("#submitBtn").click(function () {            
            
            if ($("#UploadPaymentForm")[0].checkValidity()) {
                if (formFiles.files.length == 0) {
                    console.log("formFiles.files.length = 0");
                    Swal.fire({
                        title: "No File Selected",
                        text: "Please upload your proof of payment to proceed with the application.",
                        icon: "error",
                        confirmButtonColor: '#14984a'
                    });
                }
                else {
                    $("#confirmSubmitModal").modal("show");
                    $("#uploadPOPModal").modal("hide");
                }

            }
            else {
                $("#UploadPaymentForm")[0].reportValidity();
            }
            
            
        });

        
        $("#confirmBtn").click(function () {
            //var formFiles = document.forms['UploadPaymentForm']['filesUpload.Files'];
            //formFiles.files = dt.files; //Making sure that the displayed files will be the files uploaded when submitting the form.
            paymentForm.submit(); //Submit form
        });

        $("#backBtn").click(function () {
            $("#confirmSubmitModal").modal("hide");
            $("#uploadPOPModal").modal("show");
        });

    });

    // const paymentForm = document.getElementById('UploadPaymentForm');
    // const showModalButton = document.getElementById('submitBtn');
    const confirmationModal = document.getElementById('confirmSubmitModal');
    // const confirmButton = document.getElementById('confirmBtn');

    // // Function to display the modal
    // function showModal() {
    //     $("#confirmSubmitModal").modal("show");
    //     $("#uploadPOPModal").modal("hide");
    //     //confirmationModal.style.display = 'block';
    // }

    // // Function to hide the modal
    // function hideModal() {
    //     $("#confirmSubmitModal").modal("hide");
    //     $("#uploadPOPModal").modal("show");        
    //     //confirmationModal.style.display = 'none';
    // }

    // $("#backBtn").click(function () {
    //     $("#confirmSubmitModal").modal("hide");
    //     $("#uploadPOPModal").modal("show");
    // });

    // // Event listener for the "Submit" button
    // showModalButton.addEventListener('click', showModal);

    // // Event listener for the "Confirm" button
    // confirmButton.addEventListener('click', function () {
    //     // Submit the form when the "Confirm" button is clicked        
    //     paymentForm.submit();
    // });

    // Close the modal when the user clicks outside of it
    window.addEventListener('click', function (event) {
        if (event.target === confirmationModal) {
            $("#uploadPOPModal").modal("show");
            //hideModal();
        }
        if (event.target === document.getElementById('uploadPOPModal')) {
            const removeFileButton = document.querySelector('.fileinput-remove-button');
            removeFileButton.click();
            $("input").val("");
            //$("#uploadPOPModal").modal("show");
            //hideModal();
        }
    });

</script>