@using System.Security.Claims;
@model FMB_CIS.Models.ViewModel
@{
    Layout = "~/Views/Shared/_MainPageLayout.cshtml";
    ViewBag.Title = "Manage Applications";
    ViewBag.Role = ((ClaimsIdentity)User.Identity).FindFirst("userRole").Value;
    ViewBag.UserType = ((ClaimsIdentity)User.Identity).FindFirst("userRole").Value;
}

<link rel="stylesheet" href="~/js/DataTable/dataTables.min.css">
<script src="~/js/jquery/jquery-3.7.1/jquery-3.7.1.js"></script>
<script src="~/js/DataTable/dataTables.min.js"></script>

<style>
    .progress {
        height: 5px;
    }

    .progress-text {
        display: flex;
    }

    .progress-status {
        flex: 1;
    }

    .progress-count {
    }
</style>

<div id="card-container">
    <div id="card">
        <h2>Permit to Import</h2>
        <button type="button" id="btnAdd" class="btn btn-primary float-end" onclick="window.location.href = '@Url.Action("Index", "ChainsawImporter")'">Add New <i data-feather="plus"></i></button>
        <table class="table dataTable" style="width:100%">
            <thead>
                <tr>
                    <th class="hidden-column">
                        ID
                    </th>
                    <th>
                        Reference Number
                    </th>
                    <th>
                        Application Date
                    </th>
                    <th>
                        Quantity
                    </th>                   
                    <th>
                        Permit Status
                    </th>
                    <th>
                        Proof of Payment
                    </th>
                    <th>
                        Action
                    </th>


                </tr>
            </thead>
            <tbody>
                @foreach (ApplicantListViewModel item in Model.applicantListViewModels)
                {
                    @if (item.permit_type == "Permit to Import")
                    {
                        <tr>
                            <td class="hidden-column">
                                @Html.DisplayFor(modelItem => item.id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReferenceNo)
                            </td>
                            @* <td>
                                @Html.DisplayFor(modelItem => item.full_name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.contact)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.address)
                            </td> *@
                            <td>
                                @Html.DisplayFor(modelItem => item.applicationDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.qty)
                            </td>
                            <td>
                                <div class="progress-text @(item.currentPercentage == 100 ? "progress-text-complete" : "")">
                                    <span class="progress-status">
                                        @Html.DisplayFor(modelItem => item.permit_statuses)
                                    </span>
                                    <span class="progress-count">
                                        @Html.DisplayFor(modelItem => item.currentStepCount) /
                                        @Html.DisplayFor(modelItem => item.currentMaxCount)
                                    </span>
                                </div>
                                <div class="progress">
                                    <div class="progress-bar @(item.currentPercentage == 100 ? "complete-progress-bar" : "")" role="progressbar" style="width: @Html.DisplayFor(modelItem => item.currentPercentage)%" aria-valuenow="@Html.DisplayFor(modelItem => item.currentStepCount)" aria-valuemin="@Html.DisplayFor(modelItem => item.currentStepCount)" aria-valuemax="@Html.DisplayFor(modelItem => item.currentMaxCount)"></div>
                                </div>
                            </td>
                            <td>
                                @if (item.permit_status_id == 6 || item.permit_status_id == 8 || item.permit_status_id == 10)
                                {
                                    <div class="d-flex justify-content-center">
                                        <a href="#" id="uploadPOP" class="bg-green text-white pt-0 pb-1 px-2 rounded text-decoration-none" data-application-id="@item.id" onclick="uploadPaymentClicked(this)">
                                            <i data-feather="upload" class="data-feather-20"></i> Upload
                                        </a>
                                    </div>
                                }
                                else if (item.permit_status_id == 7 || item.permit_status_id == 9)
                                {
                                    <div class="d-flex justify-content-center">Payment Verification In Progress</div>
                                }
                                else if (item.permit_status_id == 11)
                                {
                                    <div class="d-flex justify-content-center">Payment Approved</div>
                                }
                                else
                                {
                                    <div class="d-flex justify-content-center">Not Yet Approved for Payment</div>
                                }
                            </td>
                            <td>
                                @* <a href="ChainsawImporterApproval?uid=@item.tbl_user_id&appid=@item.id">Take Action</a> *@
                                @if (item.application_type.Contains("Importer"))
                                {
                                    <a href="../Application/EditApplication?uid=@item.tbl_user_id&appid=@item.id">View</a>
                                }
                                @if (item.application_type.Contains("Seller"))
                                {
                                    <a href="../Application/EditApplication?uid=@item.tbl_user_id&appid=@item.id">View</a>
                                }
                                @if (item.application_type.Contains("Owner"))
                                {
                                    <a href="../Application/EditApplication?uid=@item.tbl_user_id&appid=@item.id">View</a>
                                }

                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<script src="/js/jquery-3.7.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script type="text/javascript">
    // $(document).ready(function () {

    //     //FILE UPLOAD
    //     const dt = new DataTransfer();

    //     $(".file").on("change", function (e) {

    //         // Get the selected file(s)
    //         console.log($('#filesUpload.Files').val());
    //         var selectedFiles = $(this).prop("files");
    //         console.log(selectedFiles);
    //         var fafile = "";
    //         // Clear the previous output
    //         //$(".output").empty();

    //         var duplicatedFiles = [];

    //         var validFiles = [];


    //         // Display file information in the specified format
    //         for (var i = 0; i < this.files.length; i++) {

    //             var hasdup = false;

    //             for (var x = 0; x < dt.files.length; x++) {

    //                 if (dt.files[x].name == selectedFiles[i].name) {
    //                     //Swal.fire({
    //                     //    title: "Duplicate File",
    //                     //    text: "You have uploaded a duplicate file " + dt.files[0].name,
    //                     //    icon: "error"
    //                     //});
    //                     duplicatedFiles.push(selectedFiles[i].name)
    //                     //  selectedFiles.splice(i, 1);
    //                     hasdup = true;
    //                 }
    //             }

    //             if (!hasdup) {
    //                 validFiles.push(selectedFiles[i]);
    //             }

    //         }

    //         if (duplicatedFiles.length > 0) {


    //             var errorsHtml = "";
    //             const list = document.createElement('ul');
    //             for (var x = 0; x < duplicatedFiles.length; x++) {

    //                 const listItem = document.createElement('li');
    //                 listItem.innerHTML = duplicatedFiles[x] + "<br/>";
    //                 list.appendChild(listItem);
    //             }

    //             Swal.fire({
    //                 title: "Duplicate File",
    //                 text: "You have uploaded a duplicate file " + dt.files[0].name,
    //                 icon: "error",
    //                 html: list
    //             });
    //         }


    //         // Display file information in the specified format
    //         for (var i = 0; i < validFiles.length; i++) {
    //             //ifelse for fa-file type
    //             if (validFiles[i].type == "application/vnd.openxmlformats-officedocument.wordprocessingml.document") {
    //                 fafile = "fa-file-word"
    //             }
    //             else if (validFiles[i].type == "application/pdf") {
    //                 fafile = "fa-file-pdf"
    //             }
    //             else if (validFiles[i].type == "image/jpeg") {
    //                 fafile = "fa-file-image"
    //             }
    //             else {
    //                 fafile = "fa-file"
    //             }
    //             // Create div elements and set their classes and content
    //             var cardDiv = $("<div>").addClass("card mw-18rem ").attr('id', validFiles[i].name);
    //             var fileDiv = $("<div>").addClass("card-body");
    //             var fileIcon = $("<i>").addClass("fas " + fafile + " text-light-green fs-1 mb-3");
    //             var dropdownIcon = $("<i>").addClass("fas fa-ellipsis-v cursor-pointer fs-3 position-absolute end-0 me-3 text-secondary").attr({
    //                 "data-bs-toggle": "dropdown",
    //                 "aria-expanded": "false"
    //             });
    //             var dropdownMenu = $("<ul>").addClass("dropdown-menu").append(
    //                 $("<li>").append($("<a>").addClass("dropdown-item").attr("href", "#").text("View")),
    //                 $("<li>").append($("<a>").addClass("dropdown-item file-delete").attr("href", "#").text("Delete")),
    //                 $("<li>").append($("<a>").addClass("dropdown-item").attr("href", "#").text("Download"))
    //             );
    //             var fileName = $("<h6>").addClass("card-title text-secondary").text(validFiles[i].name);
    //             var fileInfoList = $("<ul>").addClass("list-unstyled small mb-0").append(
    //                 $("<li>").append($("<span>").addClass("text-muted").text("type: " + validFiles[i].type)),
    //                 $("<li>").append($("<span>").addClass("text-muted").text("size: " + (validFiles[i].size / 1024).toFixed(2) + "kb")),
    //                 $("<li>").append($("<span>").addClass("text-muted").text("uploaded: " + new Date().toLocaleDateString()))
    //             );

    //             // Append created elements to the fileDiv
    //             fileDiv.append(fileIcon, dropdownIcon, dropdownMenu, fileName, fileInfoList);

    //             // Append the fileDiv to the cardDiv
    //             cardDiv.append(fileDiv);

    //             // Append the cardDiv to the output div
    //             $(".output").append(cardDiv);
    //         }
    //         for (let file of validFiles) {
    //             dt.items.add(file);
    //         }

    //         selectedFiles = dt.files;
    //         console.log(selectedFiles);


    //         $('.file-delete').click(function () {
    //             let name = $(this).closest('.card').attr('id');
    //             // Supprimer l'affichage du nom de fichier
    //             //$(this).parent().remove();
    //             document.getElementById(name).remove()
    //             for (let i = 0; i < dt.items.length; i++) {
    //                 // Correspondance du fichier et du nom
    //                 if (name === dt.items[i].getAsFile().name) {
    //                     // Suppression du fichier dans l'objet DataTransfer
    //                     dt.items.remove(i);
    //                     continue;
    //                 }
    //             }
    //             // Mise à jour des fichiers de l'input file après suppression
    //             selectedFiles = dt.files;
    //         });

    //         this.value = null;
    //     });

    //     //END FOR FILE UPLOAD


    //     // $("#uploadPOP").click(function () {
    //     //     $("#uploadPOPModal").modal("show");
    //     // });

    //     $("#cancelBtn").click(function () {
    //         $("#uploadPOPModal").modal("hide");
    //     });
    // });

    function uploadPaymentClicked(that) {
        //console.log("Test 1");
        $("#uploadPOPModal").modal("show");
        //console.log("Test 2");
        //console.log(that);
        //console.log(that.dataset.applicationId);
        var applicID = that.dataset.applicationId;
        document.getElementById("applicationID").value = applicID;
    }
</script>