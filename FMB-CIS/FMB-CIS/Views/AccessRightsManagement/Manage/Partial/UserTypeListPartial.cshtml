@using System.Security.Claims;
@using System.Globalization;
@model FMB_CIS.Models.UserTypeListViewModel
@{
    ViewBag.Title = "User Type Management";
}
<div class="list-group list-group-style1">
    <div href="#" class="list-group-item list-group-item-action flex-column align-items-start search-box-container">
        <div class="d-flex w-100 justify-content-between">
            <h5 class="mb-2">
                <input type="text" id="userTypeSearch" class="search-box" placeholder="SEARCH" />
            </h5>
            <small class="search-clear-button text-muted clickable" onclick="ClearSearch()">Clear</small>
        </div>
    </div>
    <div id="userTypes">
        @foreach (UserType item in Model.userTypes)
        {
            <div href="#" class="list-group-item list-group-item-action flex-column align-items-start" id="item-@Html.DisplayFor(modelItem=>item.id)">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">@Html.DisplayFor(modelItem => item.name)</h5>
                    <small class="text-muted">#@Html.DisplayFor(modelItem => item.id) Modified @Html.DisplayFor(modelItem => item.date_modified)</small>
                </div>
                @*<p class="mb-1">@Html.DisplayFor(modelItem => item.name)</p>*@
                @*<p class="c-hidden">@Html.DisplayFor(modelItem => item.createdBy)</p>*@
                <small><a class="btnUpdateOfficeType" onclick="OpenUpdateModal(@Html.DisplayFor(modelItem => item.id))">Update</a></small>
                <small><a class="btnDeleteOfficeType" onclick="OpenDeleteModal(@Html.DisplayFor(modelItem => item.id))">Delete</a></small>
                @*<small class="c-hidden-on-show"><a class="btnShowDetailsOfficeType" onclick="ShowDetails(@Html.DisplayFor(modelItem => item.id))">More Details</a></small>*@
                @*<small class="c-hidden-inline"><a class="btnHideDetailsOfficeType" onclick="HideDetails(@Html.DisplayFor(modelItem => item.id))">Hide Details</a></small>*@
            </div>
        }
    </div>
</div>

<style>
    .c-info {
        width: 25%;
        float: left;
        padding: 12px;
    }

    .c-content {
        width: 75%;
        float: left;
        padding: 12px;
    }

    .card-head {
        width: 100%;
        height: 30px;
    }

    .card-head-image {
        width: 100%;
        height: 30px;
    }

    .card-body {
    }

    .card-margin {
        margin: 12px;
    }

    .list-group-style1 {
    }

        .list-group-style1 .list-group-item {
            margin-bottom: 12px;
        }

            .list-group-style1 .list-group-item + .list-group-item {
                border-top-width: 1px;
            }

    small a {
        color: #14984a;
        padding: 3px 0;
        border: none;
        border-bottom: solid 1px #14984a;
        margin-right: 12px;
        background: none;
        box-shadow: unset !important;
        outline: 0 !important;
        margin: 0 !important;
        margin-right: 12px !important;
        margin-top: 12px !important;
        text-decoration: none;
        cursor: pointer;
    }

    .search-box-container, .search-box-container:hover {
        background-color: #FFFFFF;
    }

        .search-box-container small {
            padding: 13px 0;
        }

    .search-box {
        border: none;
        font: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        font-style: normal;
        padding: 8px 0;
    }

        .search-box:focus {
            outline: none;
        }

    .c-hidden, .c-hidden-inline {
        display: none;
    }

    .c-show-hidden .c-hidden-inline {
        display: inline-block;
    }

    .c-show-hidden .c-hidden {
        display: block;
    }

    .c-show-hidden .c-hidden-on-show {
        display: none;
    }

    .clickable {
        cursor: pointer;
    }
</style>

<script type="text/javascript">
    function OpenUpdateModal(id) {
        $('#userTypeUpdateModalContainer').load('/AccessRightsManagement/UserTypeUpdateModal/' + id, function () {
            $("#updateUserTypeModal").modal("show");
        });
    }
    function OpenDeleteModal(id) {
        console.log("OpenDeleteModal");
        $('#userTypeDeleteModalContainer').load('/AccessRightsManagement/UserTypeDeleteModal/' + id, function () {
            $("#deleteUserTypeModal").modal("show");
        });
    }
    function ShowDetails(id) {
        $('#item-' + id).addClass('c-show-hidden');
    }
    function HideDetails(id) {
        $('#item-' + id).removeClass('c-show-hidden');
    }

    $("#userTypeSearch").keyup(function () {

        // Retrieve the input field text and reset the count to zero
        var filter = $(this).val(),
            count = 0;

        // Loop through the comment list
        $('#userTypes .list-group-item').each(function () {


            // If the list item does not contain the text phrase fade it out
            if ($(this).text().search(new RegExp(filter, "i")) < 0) {
                $(this).hide();  // MY CHANGE

                // Show the list item if the phrase matches and increase the count by 1
            } else {
                $(this).show(); // MY CHANGE
                count++;
            }

        });

    });

    function ClearSearch() {
        $("#userTypeSearch").val("").keyup();
    }
</script>