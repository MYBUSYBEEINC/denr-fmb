@using System.Security.Claims;
@using System.Globalization;
@model FMB_CIS.Models.UserTypeAccessRightsListViewModel
@{
    ViewBag.Title = "Access Rights Management";
}
<div class="list-group list-group-style1">
@*    <div href="#" class="list-group-item list-group-item-action flex-column align-items-start search-box-container">
        <div class="d-flex w-100 justify-content-between">
            <h5 class="mb-2">
                <input type="text" class="search-box" placeholder="SEARCH" />
            </h5>
            <small class="text-muted">Clear</small>
        </div>
    </div>*@
    <div class="accordion" id="accordionUserTypes">
        @foreach (UserTypes userTypeItem in Model.userTypes)
        {
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@Html.DisplayFor(modelItem => userTypeItem.id)" aria-expanded="true" aria-controls="collapseOne">
                        @Html.DisplayFor(modelItem => userTypeItem.name) <span class="badge bg-dark rounded-pill text-bg-primary"><span class="userTypeAccessRightTotalToggled" data-user-type-id="@Html.DisplayFor(modelItem => userTypeItem.id)"></span>/<span class="accessRightsTotal">@Model.accessRights.Count()</span></span>
                    </button>
                </h2>
                <div id="collapse-@Html.DisplayFor(modelItem => userTypeItem.id)" class="accordion-collapse collapse" data-bs-parent="#accordionUserTypes">
                    <div class="accordion-body">

                        @foreach (AccessRights accessRightsItem in Model.accessRights)
                        {
                            <div class="form-check form-switch">
                                <input class="form-check-input userTypeAccessRight-@Html.DisplayFor(modelItem => userTypeItem.id)" type="checkbox" role="switch" id="userTypeAccessRight-@Html.DisplayFor(modelItem => userTypeItem.id)-@Html.DisplayFor(modelItem => accessRightsItem.id)" onclick="ToggleUserTypeAccessRight(@Html.DisplayFor(modelItem => userTypeItem.id), @Html.DisplayFor(modelItem => accessRightsItem.id))">  @*value=""*@
                                <label class="form-check-label" for="flexCheckDefault">
                                    @Html.DisplayFor(modelItem => accessRightsItem.code)
                                </label>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .c-info {
        width: 25%;
        float: left;
        padding: 12px;
    }

    .c-content {
        width: 75%;
        float: left;
        padding: 12px;
    }

    .card-head {
        width: 100%;
        height: 30px;
    }

    .card-head-image {
        width: 100%;
        height: 30px;
    }

    .card-body {
    }

    .card-margin {
        margin: 12px;
    }

    .list-group-style1 {
    }

        .list-group-style1 .list-group-item {
            margin-bottom: 12px;
        }

            .list-group-style1 .list-group-item + .list-group-item {
                border-top-width: 1px;
            }

    small a {
        color: #14984a;
        padding: 3px 0;
        border: none;
        border-bottom: solid 1px #14984a;
        margin-right: 12px;
        background: none;
        box-shadow: unset !important;
        outline: 0 !important;
        margin: 0 !important;
        margin-right: 12px !important;
        margin-top: 12px !important;
        text-decoration: none;
        cursor: pointer;
    }

    .search-box-container, .search-box-container:hover {
        background-color: #FFFFFF;
    }

        .search-box-container small {
            padding: 13px 0;
        }

    .search-box {
        border: none;
        font: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        font-style: normal;
        padding: 8px 0;
    }

        .search-box:focus {
            outline: none;
        }

    .c-hidden, .c-hidden-inline {
        display: none;
    }

    .c-show-hidden .c-hidden-inline {
        display: inline-block;
    }

    .c-show-hidden .c-hidden {
        display: block;
    }

    .c-show-hidden .c-hidden-on-show {
        display: none;
    }
    .badge {
        margin-left: 12px;
    }
</style>

<script type="text/javascript">
    function OpenUpdateModal(id) {
        $('#accessRightsUpdateModalContainer').load('/AccessRightsManagement/AccessRightsUpdateModal/' + id, function () {
            $("#updateAccessRightsModal").modal("show");
        });
    }
    function OpenDeleteModal(id) {
        console.log("OpenDeleteModal");
        $('#accessRightsDeleteModalContainer').load('/AccessRightsManagement/AccessRightsDeleteModal/' + id, function () {
            $("#deleteAccessRightsModal").modal("show");
        });
    }
    function ToggleUserTypeAccessRight(userTypeId, accessRightsId) {
        let parameters = {
            userTypeId: userTypeId,
            accessRightsId: accessRightsId
        };
        $.post("/AccessRightsManagement/UserTypeAccessRightsToggle", parameters, function (data) {
            // NOTE: TO DO if success
            //$('#accessRightsListPartialContainer').load('/AccessRightsManagement/UserTypeAccessRightsToggle');
            //closeModal();
        });
        getUserTypeAccessRightCount();
    }
    function ShowDetails(id) {
        $('#item-' + id).addClass('c-show-hidden');
    }
    function HideDetails(id) {
        $('#item-' + id).removeClass('c-show-hidden');
    }

    function initializeSettings() {
        //let userTypes = @Model.userTypes;

        //let accessRights = @Model.accessRights;

        //let userTypeAccessRights = @Model.userTypeAccessRights;
        GetUserTypeAccessRight();
    }
    initializeSettings();
    function GetUserTypeAccessRight() {
        $.get("/AccessRightsManagement/UserTypeAccessRights", function (data) {
            console.log(data);
            data.forEach(function (dataItem) {
                console.log(dataItem);
                $("#userTypeAccessRight-" + dataItem.user_type_id + "-" + dataItem.access_right_id).attr('checked', true);
            });
            getUserTypeAccessRightCount();
            // NOTE: TO DO if success
            //$('#accessRightsListPartialContainer').load('/AccessRightsManagement/UserTypeAccessRightsToggle');
            //closeModal();
        });
    }

    function getUserTypeAccessRightCount(item) {
        $(".userTypeAccessRightTotalToggled").each(
            function(){
                let id = $(this).attr("data-user-type-id");
                let count = $(".userTypeAccessRight-" + id + ":checked").length;
                $(this).text(count);
            }
        )
    }
</script>