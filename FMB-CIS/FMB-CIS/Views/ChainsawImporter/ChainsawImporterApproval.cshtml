@using System.Security.Claims;
@model FMB_CIS.Models.ViewModel
@* @model FMB_CIS.Models.ApplicantListViewModel *@
@{
    Layout = "~/Views/Shared/_MainPageLayout.cshtml";
    ViewBag.Title = "Chainsaw Importer";
    ViewBag.Cenro = ((ClaimsIdentity)User.Identity).FindFirst("userRole").Value.Contains("CENRO");
    ViewBag.Inspector = ((ClaimsIdentity)User.Identity).FindFirst("userRole").Value.Contains("Inspector");
    var baseurl = ViewBag.BaseUrl;
}

<div id="card-container">
    <div id="card">
        <form asp-action="ChainsawImporterApproval" method="post" enctype="multipart/form-data" id="ApplApprvlForm">
            <<div class="row m-0">
                @* <input asp-for="applicantViewModels.id" value="@Model.applicantViewModels.id" type="hidden" />
                <input asp-for="applicantViewModels.tbl_user_id" value="@Model.applicantViewModels.tbl_user_id" type="hidden" /> *@
                <input asp-for="uid" type="hidden" />
                <input asp-for="appid" type="hidden" />
                <div class="col-md-6">
                    @if (Model.applicantViewModels.renew_from == null)
                    {
                        <div class="form-group d-flex flex-column gap-1">
                            <label class="text-secondary small">
                                Category
                            </label>
                            <span class="fw-bold">
                                <label>NEW APPLICATION</label>
                            </span>
                            @if (ViewBag.hasRenewal == true)
                            {
                                <a href='@string.Format("{0}ChainsawImporter/ChainsawImporterApproval?uid={1}&appid={2}", baseurl,ViewBag.uid,ViewBag.RenewalID)'>A renewal for this application was applied. Please click this to view.</a>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="form-group d-flex flex-column gap-1">
                            <label class="text-secondary small">
                                Category
                            </label>
                            <span class="fw-bold">
                                <label>RENEWAL</label>
                            </span>
                            <a href='@string.Format("{0}ChainsawImporter/ChainsawImporterApproval?uid={1}&appid={2}", baseurl,ViewBag.uid,Model.applicantViewModels.renew_from)'>Click here to see previous application</a>
                            @if (ViewBag.hasRenewal == true)
                            {
                                <a href='@string.Format("{0}ChainsawImporter/ChainsawImporterApproval?uid={1}&appid={2}", baseurl,ViewBag.uid,ViewBag.RenewalID)'>A renewal for this application was applied. Please click this to view.</a>
                            }
                        </div>
                    }
                </div>
                <div class="d-flex justify-content-end gap-2">
                    @foreach (WorkflowStep worklowStep in Model.workflow.steps)
                    {
                        @if (@worklowStep.workflow_step_code == @Model.applicantViewModels.status.ToString())
                        {
                            @foreach (WorkflowNextStep workflowNextStep in worklowStep.nextSteps)
                            {
                                @if (workflowNextStep.user_type_id.ToString() == ((ClaimsIdentity)User.Identity).FindFirst("userRoleIds").Value
                                && (workflowNextStep.division_id == 0 ||
                                (workflowNextStep.division_parameter == "equal" && workflowNextStep.division_id == @Model.applicantViewModels.tbl_region_id) ||
                                (workflowNextStep.division_parameter == "notequal" && workflowNextStep.division_id != @Model.applicantViewModels.tbl_region_id)))
                                {
                                    <button type="button" class="customBtn btn @workflowNextStep.button_class w-125" data-next_step_code="@workflowNextStep.next_step_code" data-button_text="@workflowNextStep.button_text">
                                    @workflowNextStep.button_text
                                    </button>
                                }
                            }
                        }
                    }
                  @*  @if (((ClaimsIdentity)User.Identity).FindFirst("userRole").Value == "DENR CENRO" || ((ClaimsIdentity)User.Identity).FindFirst("userRole").Value == "DENR Implementing PENRO" || ((ClaimsIdentity)User.Identity).FindFirst("userRole").Value == "DENR Regional Executive Director (RED)")
                    {
                        if (Model.applicantViewModels.status <= 6)
                        {
                            <button type="button" id="approveBtn" class="btn btn-primary w-125">-----Approve and Proceed to Payments</button>
                            <button type="button" id="declineBtn" class="btn btn-danger w-105 btnCancel">-----Decline</button>
                        }
                        if (Model.applicantViewModels.permit_status == "Payment Verification (CENRO)" || Model.applicantViewModels.permit_status == "Payment Rejected (CENRO)")
                        {
                            <button type="button" id="approveBtn" class="btn btn-primary w-110">-----Approve Payment</button>
                            <button type="button" id="declineBtn" class="btn btn-danger w-110 btnCancel">-----Decline Payment</button>
                        }

                    }
                    @if (((ClaimsIdentity)User.Identity).FindFirst("userRole").Value.Contains("Inspector") == true)
                    {
                        if (Model.applicantViewModels.status <= 6)
                        {
                            <button type="button" id="approveBtn" class="btn btn-primary w-105">-----Approve</button>
                            <button type="button" id="declineBtn" class="btn btn-danger w-105 btnCancel">-----Decline</button>
                        }
                        if (Model.applicantViewModels.permit_status == "Payment Verification (Inspector)" || Model.applicantViewModels.permit_status == "Payment Rejected (Inspector)")
                        {
                            <button type="button" id="approveBtn" class="btn btn-primary w-110">-----Approve Payment</button>
                            <button type="button" id="declineBtn" class="btn btn-danger w-110 btnCancel">-----Decline Payment</button>
                        }
                    }*@
                    <input asp-for="decision" id="decisionID" type="hidden" />
                    <input asp-for="next_step_code" id="next_step_code" type="hidden" />
                </div>
            </div>
            <hr />
            <div id="profileSection" class="row m-0">

                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="row mb-5">
                                <div class="col-md-5">
                                    <div class="form-group d-flex flex-column gap-1">
                                        <label class="text-secondary small">
                                            User Type
                                        </label>
                                        <span class="fw-bold">
                                            @* <label asp-for="applicantViewModels.user_type" value="@Model.applicantViewModels.user_type">@Model.applicantViewModels.user_type</label> *@
                                            @Html.DisplayFor(model => model.applicantViewModels.user_type)
                                        </span>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group d-flex flex-column gap-1">
                                        <label class="text-secondary small">
                                            Name
                                        </label>
                                        <span class="fw-bold">
                                            @* <label asp-for="applicantViewModels.full_name" value="@Model.applicantViewModels.full_name">@Model.applicantViewModels.full_name</label> *@
                                            @Html.DisplayFor(model => model.applicantViewModels.full_name)
                                            @Html.HiddenFor(model => model.applicantViewModels.first_name)
                                            @Html.HiddenFor(model => model.applicantViewModels.middle_name)
                                            @Html.HiddenFor(model => model.applicantViewModels.last_name)
                                            @Html.HiddenFor(model => model.applicantViewModels.suffix)
                                            @Html.HiddenFor(model => model.applicantViewModels.full_name)
                                            @Html.HiddenFor(model => model.applicantViewModels.tbl_user_id)
                                            @Html.HiddenFor(model => model.applicantViewModels.status)
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-5">
                                <div class="col-md-5">
                                    <div class="form-group d-flex flex-column gap-1">
                                        <label class="text-secondary small">
                                            Email Address
                                        </label>
                                        <span class="fw-bold">
                                            @* <label asp-for="email" value="@Model.email">@Model.email</label> *@
                                            @Html.DisplayFor(model => model.applicantViewModels.email)
                                            @Html.HiddenFor(model => model.applicantViewModels.email)
                                        </span>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group d-flex flex-column gap-1">
                                        <label class="text-secondary small">
                                            Contact Number
                                        </label>
                                        <span class="fw-bold">
                                            @* <label asp-for="applicantViewModels.contact" value="@Model.applicantViewModels.contact">@Model.applicantViewModels.contact</label> *@
                                            @Html.DisplayFor(model => model.applicantViewModels.contact)
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-5">
                                <div class="col-md-10">
                                    <div class="form-group d-flex flex-column gap-1">
                                        <label class="text-secondary small">
                                            Address
                                        </label>
                                        <span class="fw-bold">
                                            @* <label asp-for="applicantViewModels.address" value="@Model.applicantViewModels.address">@Model.applicantViewModels.address</label> *@
                                            @Html.DisplayFor(model => model.applicantViewModels.full_address)
                                        </span>
                                    </div>
                                </div>                                
                            </div>
                            <hr />
                            <div class="row mb-5">
                                <div class="col-md-5">
                                    <div class="form-group d-flex flex-column gap-1">
                                        <label class="text-secondary small">
                                            Permit Type
                                        </label>
                                        <span class="fw-bold">
                                            @* <label asp-for="applicantViewModels.valid_id" value="@Model.applicantViewModels.valid_id">@Model.applicantViewModels.valid_id</label> *@
                                            @Html.DisplayFor(model => model.applicantViewModels.permit_type)
                                        </span>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group d-flex flex-column gap-1">
                                        <label class="text-secondary small">
                                            Permit Status
                                        </label>
                                        <span class="fw-bold">
                                            @* <label asp-for="applicantViewModels.valid_id_no" value="@Model.applicantViewModels.valid_id_no">@Model.applicantViewModels.valid_id_no</label> *@
                                            @Html.DisplayFor(model => model.applicantViewModels.permit_status)
                                        </span>
                                    </div>
                                </div>
                            </div>
                            @if (Model.applicantViewModels.status == 11)
                            {
                                <div class="row mb-5">
                                    <div class="col-md-5">
                                        <div class="form-group d-flex flex-column gap-1">
                                            <label class="text-secondary small">
                                                Date of Permit Registration
                                            </label>
                                            <span class="fw-bold">
                                                @Html.DisplayFor(model => model.applicantViewModels.date_of_registration)
                                                @Html.HiddenFor(model => model.applicantViewModels.date_of_registration)
                                            </span>
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group d-flex flex-column gap-1">
                                            <label class="text-secondary small">
                                                Date of Permit Expiration
                                            </label>
                                            <span class="fw-bold">
                                                @Html.DisplayFor(model => model.applicantViewModels.date_of_expiration)
                                                @Html.HiddenFor(model => model.applicantViewModels.date_of_expiration)
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="row mb-5">                                
                                <div class="col-md-5">
                                    <div class="form-group d-flex flex-column gap-1">
                                        <label class="text-secondary small">
                                            Chainsaw Quantity
                                        </label>
                                        <span class="fw-bold">
                                            @* <label asp-for="applicantViewModels.birth_date" value="@Model.applicantViewModels.birth_date">@Model.applicantViewModels.birth_date</label> *@
                                            @Html.DisplayFor(model => model.applicantViewModels.qty)
                                        </span>
                                    </div>
                                </div>  
                                <div class="col-md-5">
                                    <div class="form-group d-flex flex-column gap-1">
                                        <label class="text-secondary small">
                                            Specification
                                        </label>
                                        <span class="fw-bold">
                                            @Html.DisplayFor(model => model.applicantViewModels.specification)
                                            @Html.HiddenFor(model => model.applicantViewModels.specification)
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-5">                                
                                <div class="col-md-10">
                                    <div class="form-group d-flex flex-column gap-1">
                                        <label class="text-secondary small">
                                            Purpose
                                        </label>
                                        <span class="fw-bold">
                                            @Html.DisplayFor(model => model.applicantViewModels.purpose)
                                            @Html.HiddenFor(model => model.applicantViewModels.purpose)
                                        </span>
                                    </div>
                                </div>
                            </div>
                            @if (((ClaimsIdentity)User.Identity).FindFirst("userRole").Value.Contains("Inspector") == true)
                            {
                                <div class="row mb-5">
                                    <div class="col-md-5">
                                        <div class="form-group d-flex flex-column gap-1">

                                            @if (Model.applicantViewModels.status == 1)
                                            {
                                                <label class="text-secondary small">
                                                    Initial Date of Physical Inspection
                                                </label>
                                                <span class="fw-bold">
                                                    <input type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" asp-for="applicantViewModels.initial_date_of_inspection" class="form-control" required />
                                                </span>
                                            }
                                            else
                                            {
                                                @if (Model.applicantViewModels.initial_date_of_inspection != null)
                                                {
                                                    <label class="text-secondary small">
                                                        Initial Date of Physical Inspection
                                                    </label>
                                                    <span class="fw-bold">
                                                        @* @Html.EditorFor(model => model.applicantViewModels.inspectionDate) *@
                                                        @Html.DisplayFor(model => model.applicantViewModels.initial_date_of_inspection)
                                                        @Html.HiddenFor(model => model.applicantViewModels.initial_date_of_inspection)
                                                    </span>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group d-flex flex-column gap-1">

                                            @if (Model.applicantViewModels.status == 7 || Model.applicantViewModels.status == 8)
                                            {
                                                <label class="text-secondary small">
                                                    Date Inspected
                                                </label>
                                                <span class="fw-bold">
                                                    @* @Html.EditorFor(model => model.applicantViewModels.inspectionDate) *@
                                                    <input type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" asp-for="applicantViewModels.inspectionDate" class="form-control" required />
                                                </span>
                                            }
                                            else
                                            {
                                                @if (Model.applicantViewModels.inspectionDate != null)
                                                {
                                                    <label class="text-secondary small">
                                                        Date Inspected
                                                    </label>
                                                    <span class="fw-bold">
                                                        @* @Html.EditorFor(model => model.applicantViewModels.inspectionDate) *@
                                                        @Html.DisplayFor(model => model.applicantViewModels.inspectionDate)
                                                        @Html.HiddenFor(model => model.applicantViewModels.inspectionDate)
                                                    </span>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                            else @* for CENRO View *@
                            {
                                <div class="row mb-5">
                                    @if (Model.applicantViewModels.initial_date_of_inspection != null)
                                    {
                                        <div class="col-md-5">
                                            <div class="form-group d-flex flex-column gap-1">
                                                <label class="text-secondary small">
                                                    Initial Date of Physical Inspection
                                                </label>
                                                <span class="fw-bold">
                                                    @Html.DisplayFor(model => model.applicantViewModels.initial_date_of_inspection)
                                                    @Html.HiddenFor(model => model.applicantViewModels.initial_date_of_inspection)
                                                </span>
                                            </div>
                                        </div>
                                    }
                                    @if (Model.applicantViewModels.inspectionDate != null)
                                    {
                                        <div class="col-md-5">
                                            <div class="form-group d-flex flex-column gap-1">
                                                <label class="text-secondary small">
                                                    Date Inspected
                                                </label>
                                                <span class="fw-bold">
                                                    @Html.DisplayFor(model => model.applicantViewModels.inspectionDate)
                                                    @Html.HiddenFor(model => model.applicantViewModels.inspectionDate)
                                                </span>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            @* <div class="row mb-5">
                                <div class="col-md-5">
                                    <div class="form-group d-flex flex-column gap-1">
                                        <label class="text-secondary small">
                                            Expected time of Arrival
                                        </label>
                                        <span class="fw-bold">
                                            @Html.DisplayFor(model => model.applicantViewModels.expectedTimeArrived)
                                            @Html.HiddenFor(model => model.applicantViewModels.expectedTimeArrived)
                                        </span>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group d-flex flex-column gap-1">
                                        <label class="text-secondary small">
                                            Expected time of Release
                                        </label>
                                        <span class="fw-bold">
                                            @Html.DisplayFor(model => model.applicantViewModels.expectedTimeRelease)
                                            @Html.HiddenFor(model => model.applicantViewModels.expectedTimeRelease)
                                        </span>
                                    </div>
                                </div>
                            </div> *@
                            
                        </div>
                    </div>
                </div>
            </div>

            @* Document Tagging and Checklist *@
            <hr />
            <div class="row d-flex justify-content-center m-0" id="checklistTBLdiv">
                <table class="table dataTable" id="tblApplicantFiles">
                    <thead>
                        <tr>
                            <th>
                                Uploaded Document
                            </th>
                            <th>
                                Requirement
                            </th>
                            <th>
                                Status
                            </th>
                            <th>
                                Comment
                            </th>
                            <th>
                                Action
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (FilesWithComments item in Model.filesWithComments)
                        {
                            <tr>
                                <td>
                                    @* @Html.DisplayFor(modelItem => item.filename) *@
                                    @if (item.filename != "N/A")
                                    {
                                        <a href="#" data-fileID="@item.tbl_files_id" data-fileName="@item.filename" onclick="DocHistory(this)">@item.filename</a>
                                    }
                                    else
                                    {
                                        @item.filename
                                    }
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.tbl_document_checklist_name)
                                </td>
                                
                                <td>
                                    @if (item.tbl_files_status == "Complied")
                                    {
                                        @* <div class="bg-success text-white px-3 pb-2 pt-1 rounded-pill w-105"> *@
                                        <div class="text-success px-3 pb-2 pt-1" style="font-weight: bold">
                                            @item.tbl_files_status
                                        </div>
                                    }
                                    else if (item.tbl_files_status == "Not Complied")
                                    {
                                        @* <div class="bg-danger text-white px-3 pb-2 pt-1 rounded-pill w-105"> *@
                                        <div class="text-danger px-3 pb-2 pt-1" style="font-weight: bold">
                                            @item.tbl_files_status
                                        </div>
                                    }
                                    else @* if (item.tbl_files_status == "Pending") *@
                                    {
                                        @* <div class="bg-secondary text-white px-3 pb-2 pt-1 rounded-pill w-105"> *@
                                        <div class="text-secondary px-3 pb-2 pt-1" style="font-weight: bold">
                                            @item.tbl_files_status
                                        </div>
                                    }
                                </td>
                                <td>

                                    @if (item.filename != "N/A")
                                    {
                                        @Html.DisplayFor(modelItem => item.comment)
                                    }
                                    else
                                    {
                                        <label>N/A</label>
                                    }
                                </td>
                                <td>
                                    @if (item.filename != "N/A")
                                    {
                                        <button type="button" class="btn btn-primary w-125" data-fileID="@item.tbl_files_id" data-fileName="@item.filename" onclick="ApproveDocStatus(this)">Complied</button>
                                        <button type="button" class="btn btn-danger w-125" data-fileID="@item.tbl_files_id" data-fileName="@item.filename" onclick="DenyDocStatus(this)">Not Complied</button>
                                    }
                                    else
                                    {
                                        <label>N/A</label>
                                    }
                                </td>

                            </tr>
                        }
                        @*
                        TO BE USED IF ROWSPAN IS COMPATIBLE    
                        @{
                            int a = 0;
                            var prevFileName = "";
                            var grpFilesWithComments = Model.filesWithComments.GroupBy(g => g.filename).ToList();
                            var test = "test";
                        }
                        
                        @for(int i =0; i< grpFilesWithComments.Count();i++)
                        {
                            int lengthOfUsingTheFileName = grpFilesWithComments[i].Count();

                            int j=0;
                            @foreach (var item in grpFilesWithComments[i])
                            {
                                @if (j < 1)
                                {
                                    <tr>
                                        <td rowspan="@lengthOfUsingTheFileName">
                                            @item.filename
                                        </td>
                                        <td>
                                            @item.tbl_document_checklist_name
                                        </td>
                                        <td rowspan="@lengthOfUsingTheFileName">
                                            @if (item.tbl_files_status == "Complied")
                                            {
                                                <div class="text-success px-3 pb-2 pt-1" style="font-weight: bold">
                                                    @item.tbl_files_status
                                                </div>
                                            }
                                            else if (item.tbl_files_status == "Not Complied")
                                            {
                                                <div class="text-danger px-3 pb-2 pt-1" style="font-weight: bold">
                                                    @item.tbl_files_status
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="text-secondary px-3 pb-2 pt-1" style="font-weight: bold">
                                                    @item.tbl_files_status
                                                </div>
                                            }
                                        </td>
                                        <td rowspan="@lengthOfUsingTheFileName">

                                            @if (item.filename != "N/A")
                                            {                                                
                                                <label>@item.comment</label>
                                            }
                                            else
                                            {
                                                <label>N/A</label>
                                            }
                                        </td>
                                        <td rowspan="@lengthOfUsingTheFileName">
                                            @if (item.filename != "N/A")
                                            {
                                                <button type="button" class="btn btn-primary w-125" data-fileID="@item.tbl_files_id" data-fileName="@item.filename" onclick="ApproveDocStatus(this)">Complied</button>
                                                <button type="button" class="btn btn-danger w-125" data-fileID="@item.tbl_files_id" data-fileName="@item.filename" onclick="DenyDocStatus(this)">Not Complied</button>
                                            }
                                            else
                                            {
                                                <label>N/A</label>
                                            }
                                        </td>
                                    </tr>

                                }
                                else
                                {
                                    <tr>
                                        <td>
                                            <label>@item.tbl_document_checklist_name</label>
                                        </td>
                                    </tr>
                                }
                                
                                j++;
                            }
                        } *@
                                                
                    </tbody>
                </table>
            </div>
            @* End for Document Tagging and Checklist *@

            <hr />
            @* <div class="row d-flex justify-content-center m-0">
                <table class="table dataTable" id="tblDocumentChecklist">
                    <thead>
                        <tr>
                            <th>
                                Required Document
                            </th>
                            <th>
                                Uploaded Document
                            </th>

                        </tr>
                    </thead>
                    <tbody>                        
                        @foreach (var item in Model.fileChecklistViewModel)
                        {
                            <tr>
                                <td>
                                    @item.tbl_document_checklist_name
                                </td>
                                <td>
                                    @item.FileName
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <hr /> *@

            <div class="row d-flex justify-content-center m-0">
                <div class="mb-4">
                    <span style="white-space: pre-line">@ViewBag.RequiredDocsList</span>
                </div>
                <div class="d-flex gap-4 mb-5">
                    <h2 class="text-secondary fw-bold m-0">Attached Documents from Applicant</h2>
                </div>
                <div class="d-flex mb-4 gap-3">
                    @foreach (tbl_files file in Model.tbl_Files)
                    {
                        var folder = Model.uid + "_" + Model.appid;
                        <div class="card mw-18rem">
                            <div class="card-body">
                                @if (file.tbl_file_type_id == ".pdf")
                                {
                                    <i class="fas fa-file-pdf text-light-green fs-1 mb-3"></i>
                                }
                                else if (file.tbl_file_type_id == ".docx")
                                {
                                    <i class="fas fa-file-word text-light-green fs-1 mb-3"></i>
                                }
                                else if (file.tbl_file_type_id == ".jpg")
                                {
                                    <i class="fas fa-file-image text-light-green fs-1 mb-3"></i>
                                }
                                else
                                {
                                    <i class="fas fa-file text-light-green fs-1 mb-3"></i>
                                }
                                <i class="fas fa-ellipsis-v cursor-pointer fs-3 position-absolute end-0 me-3 text-secondary" data-bs-toggle="dropdown" aria-expanded="false"></i>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="~/Files/@folder/@file.filename" target="_blank">View</a></li>
                                    @* <li><a class="dropdown-item" href="#">Delete</a></li> *@
                                    <li><a href="@Url.Action("DownloadFile", new { filename = file.filename, path = file.path })" class="dropdown-item" href="#">Download</a></li>
                                </ul>
                                <h6 class="card-title text-secondary">@file.filename</h6>
                                <ul class="list-unstyled small mb-0">
                                    <li><span class="text-muted">type: @file.tbl_file_type_id</span></li>
                                    <li><span class="text-muted">size: @(file.file_size / 1024) kB</span></li>
                                    <li><span class="text-muted">uploaded: @file.date_created.ToString("MMM dd yyyy")</span></li>
                                </ul>
                            </div>
                        </div>
                    }
                </div>

                <hr />

                @if (Model.applicantViewModels.status >= 7)
                {

                    <div class="d-flex gap-4 mb-5">
                        <h2 class="text-secondary fw-bold m-0">Attached Proof of Payment</h2>
                    </div>
                    <div class="d-flex mb-4 gap-3">
                        @foreach (tbl_files file in Model.proofOfPaymentFiles)
                        {
                            var folder = Model.uid + "_" + Model.appid;
                            <div class="card mw-18rem">
                                <div class="card-body">
                                    @if (file.tbl_file_type_id == ".pdf")
                                    {
                                        <i class="fas fa-file-pdf text-light-green fs-1 mb-3"></i>
                                    }
                                    else if (file.tbl_file_type_id == ".docx")
                                    {
                                        <i class="fas fa-file-word text-light-green fs-1 mb-3"></i>
                                    }
                                    else if (file.tbl_file_type_id == ".jpg")
                                    {
                                        <i class="fas fa-file-image text-light-green fs-1 mb-3"></i>
                                    }
                                    else
                                    {
                                        <i class="fas fa-file text-light-green fs-1 mb-3"></i>
                                    }
                                    <i class="fas fa-ellipsis-v cursor-pointer fs-3 position-absolute end-0 me-3 text-secondary" data-bs-toggle="dropdown" aria-expanded="false"></i>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="~/Files/@folder/ProofofPayment/@file.filename" target="_blank">View</a></li>
                                        @* <li><a class="dropdown-item" href="#">Delete</a></li> *@
                                        <li><a href="@Url.Action("DownloadFile", new { filename = file.filename, path = file.path })" class="dropdown-item" href="#">Download</a></li>
                                    </ul>
                                    <h6 class="card-title text-secondary">@file.filename</h6>
                                    <ul class="list-unstyled small mb-0">
                                        <li><span class="text-muted">type: @file.tbl_file_type_id</span></li>
                                        <li><span class="text-muted">size: @(file.file_size / 1024) kB</span></li>
                                        <li><span class="text-muted">uploaded: @file.date_created.ToString("MMM dd yyyy")</span></li>
                                    </ul>
                                </div>
                            </div>
                        }
                    </div>
                    <hr />
                }
                @if (Model.applicantViewModels.status > 7)
                {
                    <div class="d-flex gap-4 mb-5">
                        <h2 class="text-secondary fw-bold m-0">Inspection Report</h2>
                    </div>
                    <div class="d-flex mb-4 gap-3">
                        @foreach (tbl_files file in Model.filesUploadedByInspector)
                        {
                            var folder = Model.uid + "_" + Model.appid;
                            <div class="card mw-18rem">
                                <div class="card-body">
                                    @if (file.tbl_file_type_id == ".pdf")
                                    {
                                        <i class="fas fa-file-pdf text-light-green fs-1 mb-3"></i>
                                    }
                                    else if (file.tbl_file_type_id == ".docx")
                                    {
                                        <i class="fas fa-file-word text-light-green fs-1 mb-3"></i>
                                    }
                                    else if (file.tbl_file_type_id == ".jpg")
                                    {
                                        <i class="fas fa-file-image text-light-green fs-1 mb-3"></i>
                                    }
                                    else
                                    {
                                        <i class="fas fa-file text-light-green fs-1 mb-3"></i>
                                    }
                                    <i class="fas fa-ellipsis-v cursor-pointer fs-3 position-absolute end-0 me-3 text-secondary" data-bs-toggle="dropdown" aria-expanded="false"></i>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="~/Files/@folder/INSPECTOR UPLOADS/@file.filename" target="_blank">View</a></li>
                                        @* <li><a class="dropdown-item" href="#">Delete</a></li> *@
                                        <li><a href="@Url.Action("DownloadFile", new { filename = file.filename, path = file.path })" class="dropdown-item" href="#">Download</a></li>
                                    </ul>
                                    <h6 class="card-title text-secondary">@file.filename</h6>
                                    <ul class="list-unstyled small mb-0">
                                        <li><span class="text-muted">type: @file.tbl_file_type_id</span></li>
                                        <li><span class="text-muted">size: @(file.file_size / 1024) kB</span></li>
                                        <li><span class="text-muted">uploaded: @file.date_created.ToString("MMM dd yyyy")</span></li>
                                    </ul>
                                </div>
                            </div>
                        }
                    </div>
                    <hr />
                }
                
                @* <div class="d-flex gap-4 mb-5">
                    <h2 class="text-secondary fw-bold m-0">Attached Documents from CENRO</h2>
                </div>
                <div class="d-flex mb-4 gap-3">
                    @foreach (tbl_files file in Model.filesUploadedByCENRO)
                    {
                        <div class="card mw-18rem">
                            <div class="card-body">
                                @if (file.tbl_file_type_id == ".pdf")
                                {
                                    <i class="fas fa-file-pdf text-light-green fs-1 mb-3"></i>
                                }
                                else if (file.tbl_file_type_id == ".docx")
                                {
                                    <i class="fas fa-file-word text-light-green fs-1 mb-3"></i>
                                }
                                else if (file.tbl_file_type_id == ".jpg")
                                {
                                    <i class="fas fa-file-image text-light-green fs-1 mb-3"></i>
                                }
                                else
                                {
                                    <i class="fas fa-file text-light-green fs-1 mb-3"></i>
                                }
                                <i class="fas fa-ellipsis-v cursor-pointer fs-3 position-absolute end-0 me-3 text-secondary" data-bs-toggle="dropdown" aria-expanded="false"></i>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="~/Files/UserDocs/@file.filename" target="_blank">View</a></li>
                                    <li><a class="dropdown-item" href="#">Delete</a></li>
                                    <li><a href="@Url.Action("DownloadFile", new { filename = file.filename, path = file.path })" class="dropdown-item" href="#">Download</a></li>
                                </ul>
                                <h6 class="card-title text-secondary">@file.filename</h6>
                                <ul class="list-unstyled small mb-0">
                                    <li><span class="text-muted">type: @file.tbl_file_type_id</span></li>
                                    <li><span class="text-muted">size: @(file.file_size / 1024) kB</span></li>
                                    <li><span class="text-muted">uploaded: @file.date_created.ToString("MMM dd yyyy")</span></li>
                                </ul>
                            </div>
                        </div>
                    }
                </div>
                <hr /> *@               

                @if (((ClaimsIdentity)User.Identity).FindFirst("userRole").Value.Contains("Inspector") == true && Model.applicantViewModels.status > 6)
                {
                    <div class="gap-4 mb-5">
                        <h2 class="text-secondary fw-bold m-0">Upload Documents</h2>
                        <input asp-for="filesUpload.Files" type="file" class="file" multiple data-show-upload="false" data-show-caption="true" data-msg-placeholder="Select {files} for upload...">
                    </div>
                }

                @* <div class="row d-flex justify-content-center px-0 mb-5">
                @if (ViewBag.Inspector)
                {
                <div class="col-md-11 d-flex flex-column gap-2">
                <input type="file" asp-for="filesUpload.Files" class="form-control" multiple />
                </div>
                }
                </div> *@
                @* <div class="row d-flex justify-content-center px-0 mb-5">
                <div class="col-md-11 d-flex flex-column gap-2">
                <span>
                Comments
                </span>
                <textarea asp-for="comment" class="form-control"></textarea>
                @Html.EditorFor(model => model.applicantListViewModels.ToList(comment), new { htmlAttributes = new { @class = "form-control" } })
                <textarea asp-for="applicantViewModels.comment" class="form-control"></textarea>
                </div>
                </div> *@
            </div>
        </form>

        <form id="commentSection" asp-action="CommentSection">
            <div class="row d-flex justify-content-center px-0 mb-5 mt-3">
                <div class="col-md-11 d-flex flex-column gap-2">
                    <input asp-for="uid" type="hidden" />
                    <input asp-for="appid" type="hidden" />
                    <div class="row">
                        <div class="col-md-2"></div>
                        <div class="col-md-8">
                            <span class="text-secondary">
                                Please select who you want to address a comment.
                            </span>
                            @* Dropdown to select which user is addressed in the comment *@
                            <select asp-for="tbl_Comments.comment_to" class="form-select mb-4">
                                @if (((ClaimsIdentity)User.Identity).FindFirst("userRole").Value.Contains("CENRO") == true)
                                {
                                    <option value="User To CENRO">@Model.applicantViewModels.full_name</option>
                                    <option value="Inspector to CENRO">Inspector</option>
                                }
                                else if (((ClaimsIdentity)User.Identity).FindFirst("userRole").Value.Contains("Inspector") == true)
                                {
                                    <option value="User To Inspector">@Model.applicantViewModels.full_name</option>
                                    <option value="Inspector to CENRO">CENRO</option>
                                }
                            </select>
                            <textarea asp-for="tbl_Comments.comment" class="form-control mb-4" placeholder="Add comments here." required></textarea>
                            <button type="submit" id="commentBtn" class="btn btn-primary w-110">Add Comment</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        <hr />

        @* Conversation with User *@
        <div class="row d-flex justify-content-center px-0 mb-5">
            <label class="text-secondary small">Conversation with User</label>
            @foreach (CommentsViewModel item in Model.commentsViewModelsList)
            {
                <div class="row">
                    <div class="col-md-12 py-2">
                        <div class="px-2 py-1">
                            <div class="border px-3 py-2">
                                <div class="row d-flex justify-content-between mb-1">
                                    <div class="col-md-6 fs-6 fw-bold text-secondary">
                                        @item.commenterName
                                    </div>
                                    <div class="col-md-6 text-end">
                                        @item.date_created
                                    </div>
                                </div>
                                <div class="row d-flex mb-3">
                                    <div class="col-md-12 fst-normal fs-6">
                                        @item.comment
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        @* Inspector to CENRO Conversations*@
        <div class="row d-flex justify-content-center px-0 mb-5">
            @if (((ClaimsIdentity)User.Identity).FindFirst("userRole").Value.Contains("Inspector") == true)
            {
                <label class="text-secondary small">Conversation with CENRO</label>
            }
            @if (((ClaimsIdentity)User.Identity).FindFirst("userRole").Value.Contains("CENRO") == true)
            {
                <label class="text-secondary small">Conversation with Inspector</label>
            }
            @foreach (CommentsViewModel item in Model.commentsViewModels2ndList)
            {
                <div class="row">
                    <div class="col-md-12 py-2">
                        <div class="px-2 py-1">
                            <div class="border px-3 py-2">
                                <div class="row d-flex justify-content-between mb-1">
                                    <div class="col-md-6 fs-6 fw-bold text-secondary">
                                        @item.commenterName
                                    </div>
                                    <div class="col-md-6 text-end">
                                        @item.date_created
                                    </div>
                                </div>
                                <div class="row d-flex mb-3">
                                    <div class="col-md-12 fst-normal fs-6">
                                        @item.comment
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</div>

<script src="/js/jquery-3.7.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script type="text/javascript">

    const form = document.getElementById('ApplApprvlForm');
    
    var baseURL = "@baseurl";
    const queryStr = window.location.search;
    const urlParameters = new URLSearchParams(queryStr);
    const appID = urlParameters.get('appid')

    //Code for marking application as read
    $(window).on('load', function () {
        
        $.post(baseURL + "ChainsawImporter/applicationRead", { appid: appID }, function (data) {
            //console.log("data: ", data);
        });
    });

    $(document).ready(function () {


        $('#commentBtn').click(function () {
            alert('make ajax call here');
        });


        $('#approveBtn').click(function () {
            
            if ($("#ApplApprvlForm")[0].checkValidity()) {
                $('#confirmApproveModal').modal("show");
                document.getElementById("decisionID").value = "Approve";
            }
            else {
                //Validate Form
                $("#ApplApprvlForm")[0].reportValidity();
            }
        });

        $("#backApproveBtn").click(function () {
            $("#confirmApproveModal").modal('hide');
        });

        $("#confirmApproveBtn").click(function () {
            $("#confirmApproveModal").modal('hide');
            form.submit();
            $('#confirmSuccessApproveModal').modal("show");
        });

        $('#declineBtn').click(function () {
            $('#confirmDeclineModal').modal("show");
            document.getElementById("decisionID").value = "Decline";
        });

        $('#backDeclineBtn').click(function () {
            $('#confirmDeclineModal').modal("hide");
        });

        $("#confirmDeclineBtn").click(function () {
            $("#confirmDeclineModal").modal('hide');
            form.submit();
            $('#confirmSuccessDeclineModal').modal("show");
        });

        //////
        $('.customBtn').click(function (btn) {
            if ($("#ApplApprvlForm")[0].checkValidity()) {
                $('#confirmCustomModal').modal("show");
                document.getElementById("decisionID").value = "Custom";
                document.getElementById("next_step_code").value = $(this).data('next_step_code');
                document.getElementById("confirmCustomBtn").value = $(this).data('button_text');
                document.getElementById("confirmCustomMessage").value = $(this).data('button_text');
            }
            else {
                //Validate Form
                $("#ApplApprvlForm")[0].reportValidity();
            }
        });

        $("#backCustomBtn").click(function () {
            $("#confirmCustomModal").modal('hide');
        });

        $("#confirmCustomBtn").click(function () {
            $("#confirmCustomModal").modal('hide');
            $('#confirmSuccessCustomModal').modal("show");
        });

        //$('#declineBtn').click(function () {
        //    $('#confirmDeclineModal').modal("show");
        //    document.getElementById("decisionID").value = "Decline";
        //});

        //$('#backDeclineBtn').click(function () {
        //    $('#confirmDeclineModal').modal("hide");
        //});

        //$("#confirmDeclineBtn").click(function () {
        //    $("#confirmDeclineModal").modal('hide');
        //    $('#confirmSuccessDeclineModal').modal("show");
        //});
        //////






        // $('#saveBtn').click(function () {
        //     $('#confirmSaveModal').modal("show");
        //     document.getElementById("decisionID").value = "Save";
        // });

        // $("#backSaveBtn").click(function () {
        //     $("#confirmSaveModal").modal('hide');
        // });

        // $("#confirmSaveBtn").click(function () {
        //     $("#confirmSaveModal").modal('hide');
        //     $('#confirmSuccessSaveModal').modal("show");
        // });

    });

    // function ChangeDocStatus(that) {
    //     console.log("that.dataset: ", that.dataset);
    //     //that.dataset.fileid

    //     var filename = that.dataset.filename;
    //     var fileID = that.dataset.fileid;
    //     var status = "";
    //     var comment = "";
    //     var url = "@baseurl";
    //     const queryString = window.location.search;
    //     console.log("queryString: ", queryString);
    //     const urlParams = new URLSearchParams(queryString);
    //     const applicationID = urlParams.get('appid')
    //     console.log("applicationID: ", applicationID);

    //     Swal.fire({
    //         title: "Do you want to Approve or Deny " + filename + "?",
    //         showDenyButton: true,
    //         showCancelButton: true,
    //         confirmButtonText: "Approve",
    //         denyButtonText: `Deny`,
    //         confirmButtonColor: '#14984a'
    //     }).then((result) => {
    //         /* Read more about isConfirmed, isDenied below */
    //         console.log("result", result);
    //         if (result.isConfirmed) {
    //             status = "Approved";
    //             Swal.fire({
    //                 title: "Please type your comment here",
    //                 input: "text",
    //                 inputAttributes: {
    //                     autocapitalize: "off"
    //                 },
    //                 showCancelButton: true,
    //                 confirmButtonText: "Confirm",
    //                 confirmButtonColor: '#14984a',
    //             }).then((result) => {
    //                 console.log("result 2: ", result);
    //                 if (result.isDismissed != true) {
    //                     //if confirm button was clicked
    //                     console.log("result.value 2: ", result.value);
    //                     comment = result.value;
    //                     console.log("comment: ", comment);
    //                     console.log("status: ", status);

    //                     $.post(url + "ChainsawImporter/FileTaggingChanges", { tbl_files_id: fileID, tbl_files_status: status, comment: comment, appid: applicationID }, function (data) {
    //                         console.log("data: ", data);
    //                     });
    //                     Swal.fire("Approved!", "Document is Approved", "success");
    //                 }

    //             });
    //             //Swal.fire("Approved!", "Document is Approved", "success");
    //         } else if (result.isDenied) {
    //             status = "Denied"
    //             Swal.fire({
    //                 title: "Please type your comment here",
    //                 input: "text",
    //                 inputAttributes: {
    //                     autocapitalize: "off"
    //                 },
    //                 showCancelButton: true,
    //                 confirmButtonText: "Confirm",
    //                 confirmButtonColor: '#14984a',
    //             }).then((result) => {
    //                 console.log("result 2: ", result);
    //                 if (result.isDismissed != true) {
    //                     //if confirm button was clicked
    //                     console.log("result.value 2: ", result.value);
    //                     comment = result.value;
    //                     console.log("comment: ", comment);
    //                     console.log("status: ", status);

    //                     $.post(url + "ChainsawImporter/FileTaggingChanges", { tbl_files_id: fileID, tbl_files_status: status, comment: comment, appid: applicationID }, function (data) {
    //                         console.log("data: ",data);
    //                     });
    //                     Swal.fire("Denied", "Document is Denied", "success");
    //                 }

    //             });
    //             //Swal.fire("Denied", "Document is Denied", "success");
    //         }
    //     });
    // }

    function DocHistory(that) {
        console.log("test");
        var filename = that.dataset.filename;
        var fileID = that.dataset.fileid;
        console.log("filename: ", filename);
        console.log("fileID: ", fileID);
        var url = "@baseurl" + "ChainsawImporter/DocumentHistory";
        $.get(url, { tbl_files_id: fileID }, function (data) {
            console.log("data: ", data);

            if (data.length != 0) {
                var commentsListHTML = "";
                //comments
                for (let i = 0; i < data.length; i++) {
                    commentsListHTML += '<div class="row"> <div class="col-md-12 py-2"> <div class="px-2 py-1"> <div class="border px-3 py-2"> <div class="row d-flex justify-content-between mb-1"> <div class="col-md-6 fs-6 fw-bold text-secondary" style="text-align: left">' + data[i].commenterName + '</div> <div class="col-md-6 text-end"> <span class="border rounded small px-2 fw-bold text-secondary" style="text-align: right">' + data[i].formattedDate + '</span> </div> </div> <div class="row d-flex mb-3"> <div class="col-md-12 fst-normal fs-6">' + data[i].comment + '</div> </div> </div> </div> </div> </div> ';
                }
                Swal.fire({
                    title: "Comment History for " + filename,
                    width: 700,
                    confirmButtonColor: '#14984a',
                    html: commentsListHTML
                });
            }

            else {
                Swal.fire({
                    title: filename + " does not contain any comments.",
                    confirmButtonColor: '#14984a'
                });
            }

        });
    }

    function ApproveDocStatus(that) {
        console.log("that.dataset: ", that.dataset);
        //that.dataset.fileid

        var filename = that.dataset.filename;
        var fileID = that.dataset.fileid;
        var status = "Complied";
        var comment = "";
        var url = "@baseurl";
        const queryString = window.location.search;
        console.log("queryString: ", queryString);
        const urlParams = new URLSearchParams(queryString);
        const applicationID = urlParams.get('appid')
        console.log("applicationID: ", applicationID);

        Swal.fire({
            title: "Are you sure you want to mark " + filename + " as \"Complied\"?",
            showCancelButton: true,
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            confirmButtonColor: '#14984a'
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            console.log("result", result);
            if (result.isConfirmed) {
                Swal.fire({
                    title: "Please type your comment here",
                    input: "textarea",
                    inputPlaceholder: "Type your comment here...",
                    inputAttributes: {
                        autocapitalize: "off"
                    },
                    showCancelButton: true,
                    confirmButtonText: "Confirm",
                    confirmButtonColor: '#14984a',
                }).then((result) => {
                    console.log("result 2 (comment): ", result);
                    if (result.isDismissed != true) {
                        //if confirm button was clicked
                        console.log("result.value 2: ", result.value);
                        comment = result.value;
                        console.log("comment: ", comment);
                        console.log("status: ", status);

                        $.post(url + "ChainsawImporter/FileTaggingChanges", { tbl_files_id: fileID, tbl_files_status: status, comment: comment, appid: applicationID }, function (data) {
                            console.log("data: ", data);
                            $("#checklistTBLdiv").load("ChainsawImporterApproval?uid=" + "@Model.applicantViewModels.tbl_user_id" + "&appid=" + "@Model.applicantViewModels.id" + " #checklistTBLdiv");
                            console.log("load");
                            Swal.fire("Success!", "Document marked as \"Complied\"", "success");
                        });
                    }
                });
            }
        });
    }

    function DenyDocStatus(that) {
        console.log("that.dataset: ", that.dataset);

        var filename = that.dataset.filename;
        var fileID = that.dataset.fileid;
        var status = "Not Complied";
        var comment = "";
        var url = "@baseurl";
        const queryString = window.location.search;
        console.log("queryString: ", queryString);
        const urlParams = new URLSearchParams(queryString);
        const applicationID = urlParams.get('appid')
        console.log("applicationID: ", applicationID);

        Swal.fire({
            title: "Are you sure you want to mark " + filename + " as \"Not Complied\"?",
            showCancelButton: true,
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            confirmButtonColor: '#14984a'
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            console.log("result", result);
            if (result.isConfirmed) {
                Swal.fire({
                    title: "Please type your comment here",
                    input: "textarea",
                    inputPlaceholder: "Type your comment here...",
                    inputAttributes: {
                        autocapitalize: "off"
                    },
                    showCancelButton: true,
                    confirmButtonText: "Confirm",
                    confirmButtonColor: '#14984a',
                }).then((result) => {
                    console.log("result 2 (comment): ", result);
                    if (result.isDismissed != true) {
                        //if confirm button was clicked
                        console.log("result.value 2: ", result.value);
                        comment = result.value;
                        console.log("comment: ", comment);
                        console.log("status: ", status);

                        $.post(url + "ChainsawImporter/FileTaggingChanges", { tbl_files_id: fileID, tbl_files_status: status, comment: comment, appid: applicationID }, function (data) {
                            console.log("data: ", data);
                            $("#checklistTBLdiv").load("ChainsawImporterApproval?uid=" + "@Model.applicantViewModels.tbl_user_id" + "&appid=" + "@Model.applicantViewModels.id" + " #checklistTBLdiv");
                            Swal.fire("Success!", "Document marked as \"Not Complied\"", "success");
                        });
                    }
                });
            }
        });
    }


</script>